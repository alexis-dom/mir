import traceback

def add_method(cls):
    def decorator(func):
        @wraps(func) 
        def wrapper(self, *args, **kwargs): 
            return func(*args, **kwargs)
        setattr(cls, func.__name__, wrapper)
        return func
    return decorator

@add_method(safenet)
def version():
    return "2.6"

print('Check version 2.6\nCopyright 1984\nWelcome ' + safenet.ip() + '\n')
while True:
    try:
        cmd = input(safenet.ip() + '>')
        cmd = [cmd,{'params':None,'safenet':safenet}] if cmd.find(' ') == -1 else [cmd[0:cmd.find(' ')],{'params':cmd[cmd.find(' ') + 1:],'safenet':safenet}]
        if cmd[0] != '':
            exec(safenet.get('https://raw.githubusercontent.com/alexis-dom/mir/main/' + cmd[0]),cmd[1])
    except Exception as e:
        print('Error [' + e.__doc__ + ']\n' + traceback.format_exc())
        
